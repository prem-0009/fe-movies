[{"/home/ubuntu/movies/fe-movies/src/index.js":"1","/home/ubuntu/movies/fe-movies/src/App.js":"2","/home/ubuntu/movies/fe-movies/src/reportWebVitals.js":"3","/home/ubuntu/movies/fe-movies/src/components/Header.js":"4","/home/ubuntu/movies/fe-movies/src/components/WatchList.js":"5","/home/ubuntu/movies/fe-movies/src/components/Watched.js":"6","/home/ubuntu/movies/fe-movies/src/components/Add.js":"7","/home/ubuntu/movies/fe-movies/src/context/MoviesContext.js":"8","/home/ubuntu/movies/fe-movies/src/context/Reducer.js":"9"},{"size":479,"mtime":1613614679693,"results":"10","hashOfConfig":"11"},{"size":743,"mtime":1613614679689,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1613614679693,"results":"13","hashOfConfig":"11"},{"size":1130,"mtime":1614297471633,"results":"14","hashOfConfig":"11"},{"size":553,"mtime":1613614679689,"results":"15","hashOfConfig":"11"},{"size":465,"mtime":1613614679693,"results":"16","hashOfConfig":"11"},{"size":3439,"mtime":1614297471629,"results":"17","hashOfConfig":"11"},{"size":1634,"mtime":1613614679693,"results":"18","hashOfConfig":"11"},{"size":822,"mtime":1614297471633,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1d2sbr2",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"/home/ubuntu/movies/fe-movies/src/index.js",[],["44","45"],"/home/ubuntu/movies/fe-movies/src/App.js",[],"/home/ubuntu/movies/fe-movies/src/reportWebVitals.js",[],"/home/ubuntu/movies/fe-movies/src/components/Header.js",["46","47","48"],"/home/ubuntu/movies/fe-movies/src/components/WatchList.js",["49"],"import React, { useContext } from \"react\";\nimport { MoviesContext } from \"../context/MoviesContext\";\n\nconst WatchList = () => {\n  const { watchList, removeMovies, addToWatched } = useContext(MoviesContext);\n  return (\n    <div>\n      {watchList.map((item) => (\n        <div>\n          <img src={`${item.Poster}`} style={{ width: \"200px\" }} />\n          <button onClick={()=> addToWatched(item)}>watched</button>\n          <button onClick={() => removeMovies(item)}>remove </button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default WatchList;\n","/home/ubuntu/movies/fe-movies/src/components/Watched.js",["50"],"import React, { useContext } from \"react\";\nimport { MoviesContext } from \"../context/MoviesContext\";\n\nexport default function Watched() {\n  \n    const { watched, removeFromWatched } = useContext(MoviesContext);\n\n  return (\n    <div>\n      {watched.map((item) => (\n        <div>\n          <img src={`${item.Poster}`} style={{ width: \"200px\" }} />\n          <button onClick={() => removeFromWatched(item)}>remove</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\n\n","/home/ubuntu/movies/fe-movies/src/components/Add.js",["51"],"import React from \"react\";\nimport { useState, useContext } from \"react\";\nimport { makeStyles, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\n\n// import Paper from '@material-ui/core/Paper';\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InfoIcon from \"@material-ui/icons/Info\";\n\nimport { MoviesContext } from \"../context/MoviesContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n  },\n  gridList: {\n    width: 500,\n    // height:450,\n  },\n  icon: {\n    color: \"white\",\n    // font: 12px,\n  },\n}));\n\nexport default function BasicTextFields() {\n\n  // console.clear();\n\n  const { addMovies, watched, watchList } = useContext(MoviesContext);\n\n  console.log('watchlist',watchList);\n\n  const classes = useStyles(); //for the grid\n\n  const [foundMovies, setFoundMovies] = useState([]); //to store movies\n\n  let movieInWatchList = watchList.find((item)=>item.imdbID === foundMovies.imdbID);\n\n  const disableWatchList = movieInWatchList ? true : false;\n\n  console.log(disableWatchList)\n\n  console.log(movieInWatchList)\n  // console.log(foundMovies)\n  \n  const handleOnChange = (e) => {\n    e.preventDefault();\n    console.clear();\n\n    const MOVIE_API_KEY = process.env.REACT_APP_MOVIE_API;\n\n    fetch(`http://omdbapi.com/?apikey=${MOVIE_API_KEY}&s=${e.target.value}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (!data.Error) {\n          setFoundMovies(data.Search);\n        } else {\n          setFoundMovies([]);\n        }\n        console.log(data);\n      });\n  };\n\n  return (\n    <div>\n      <form\n        // className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <TextField\n          id=\"standard-basic\"\n          label=\"search here..\"\n          onChange={handleOnChange}\n        />\n      </form>\n\n      <div className={classes.root}>\n        <GridList cellHeight={180} className={classes.gridList}>\n          <GridListTile\n            key=\"Subheader\"\n            cols={2}\n            style={{ height: \"auto\", width: 200 }}\n          >\n            {/* <ListSubheader component=\"div\">December</ListSubheader> */}\n          </GridListTile>\n          {foundMovies.map((item) => (\n            <GridListTile key={item.img}>\n              <img src={item.Poster} \n              // alt={item.title} \n              />\n              <GridListTileBar\n                // title={item.Title}\n                // subtitle={<span>by: {item.author}</span>}\n                actionIcon={\n                  <IconButton\n                    // aria-label={`info about ${item.Title}`}\n                    className={classes.icon}\n                  >\n                    <button \n                    disabled={disableWatchList}\n                    onClick={() => addMovies(item)}>\n                      add to watchlist\n                    </button>\n                    <div>{item.Year}</div>\n\n                    <InfoIcon />\n                  </IconButton>\n                }\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n    </div>\n  );\n}\n","/home/ubuntu/movies/fe-movies/src/context/MoviesContext.js",["52"],"import React, { createContext, useReducer, useEffect } from \"react\";\n\nimport AppReducer from \"./Reducer\";\n\nconst initialState = {\n  watchList: localStorage.getItem(\"watchList\")\n    ? JSON.parse(localStorage.getItem(\"watchList\"))\n    : [], //from json to []\n  watched: localStorage.getItem(\"watched\")\n    ? JSON.parse(localStorage.getItem(\"watched\"))\n    : [], //from json to []\n};\n\nexport const MoviesContext = createContext(initialState);\n\n//this is the global context provider\nexport const Provider = (props) => {\n    console.log(props)\n\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  useEffect(() => {\n      console.log(props.children)\n    localStorage.setItem(\"watchList\", JSON.stringify(state.watchList));\n    localStorage.setItem(\"watched\", JSON.stringify(state.watched));\n  }, [state]);\n\n  //for action type\n  //when the addMovies is called from Add the dispatch is called from the Reducer\n  const addMovies = (movie) => {\n    dispatch({ type: \"ADD_MOVIE\", payload: movie });\n  };\n\n  const removeMovies = (movie)=>{\n      dispatch({type:\"REMOVE_MOVIE\", payload:movie})\n  } \n\n  const addToWatched =(movie)=>{\n      dispatch({type:\"WATCHED_MOVIE\", payload: movie})\n  }\n\n  const removeFromWatched = (movie)=>{\n      dispatch({type:'REMOVE_FROM_WATCHED', payload:movie})\n  }\n\n  return (\n    <div>\n      <MoviesContext.Provider\n        value={{\n          watchList: state.watchList,\n          watched: state.watched,\n          addMovies,\n          removeMovies,\n          addToWatched,\n          removeFromWatched\n\n        }}\n      >\n        {props.children}\n      </MoviesContext.Provider>\n    </div>\n  );\n};\n","/home/ubuntu/movies/fe-movies/src/context/Reducer.js",["53"],"export default (state, action)=>{\n    switch (action.type){\n        case \"ADD_MOVIE\":\n            return {\n                ...state,\n                watchList:[action.payload, ...state.watchList]\n            }\n        case \"REMOVE_MOVIE\":\n            return {\n                ...state,\n                watchList:state.watchList.filter((item)=>item.imdbID !== action.payload.imdbID)\n            }\n\n        case \"WATCHED_MOVIE\":\n            return {\n                ...state,\n                watchList:state.watchList.filter((item)=>item.imdbID !== action.payload.imdbID),\n                \n                watched:[action.payload, ...state.watched]\n            }\n        case \"REMOVE_FROM_WATCHED\":\n            return {\n                    ...state,\n                    \n                    watched:state.watched.filter((item)=>item.imdbID !== action.payload.imdbID),\n                    \n            }\n\n        default:\n            return state;\n    }\n}",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":6,"column":8,"nodeType":"60","messageId":"61","endLine":6,"endColumn":18},{"ruleId":"58","severity":1,"message":"62","line":8,"column":8,"nodeType":"60","messageId":"61","endLine":8,"endColumn":18},{"ruleId":"58","severity":1,"message":"63","line":9,"column":8,"nodeType":"60","messageId":"61","endLine":9,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":10,"column":11,"nodeType":"66","endLine":10,"endColumn":68},{"ruleId":"64","severity":1,"message":"65","line":12,"column":11,"nodeType":"66","endLine":12,"endColumn":68},{"ruleId":"64","severity":1,"message":"65","line":63,"column":15,"nodeType":"66","endLine":63,"endColumn":72},{"ruleId":"67","severity":1,"message":"68","line":26,"column":6,"nodeType":"69","endLine":26,"endColumn":13,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":1,"nodeType":"73","endLine":32,"endColumn":2},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.children'. Either include it or remove the dependency array.","ArrayExpression",["76"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [props.children, state]",{"range":"79","text":"80"},[806,813],"[props.children, state]"]